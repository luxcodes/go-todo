name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ vars.DB_DATABASE }}
          POSTGRES_USER: ${{ vars.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ vars.DB_USERNAME }} -d ${{ vars.DB_DATABASE }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: ${{ vars.DB_DATABASE }}
      DB_USERNAME: ${{ vars.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SCHEMA: ${{ vars.DB_SCHEMA }}
      PORT: 8080

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: go mod download

    - name: Generate Swagger docs
      run: |
        go install github.com/swaggo/swag/cmd/swag@latest
        swag init -g cmd/api/main.go

    - name: Lint
      run: |
        go fmt ./...
        go vet ./...

    - name: Run unit tests
      run: go test ./internal/server ./internal/models -v

    - name: Run integration tests
      run: go test ./internal/database -v

    - name: Build
      run: go build -o main ./cmd/api/main.go
